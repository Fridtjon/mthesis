
version: '2'

networks:
    behave:

services:

    ca.org1.example.com:
        image: hyperledger/fabric-ca:1.2.0
        environment:
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/39ad64982b30eae7e3aa6ee81d9ee2d926e309f9d101feed4fb5ee60d57d80e0_sk
        extra_hosts:
            - "peer0.org1.example.com:158.37.63.164"
            - "peer1.org1.example.com:158.37.63.165"
            - "peer0.org2.example.com:158.37.63.175"
            - "peer1.org2.example.com:158.37.63.184"
        ports:
            - "7054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw'
        volumes:
            - ../crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        container_name: ca.org1.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    ca.org2.example.com:
        image: hyperledger/fabric-ca:1.2.0
        environment:
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/32e40c45b2b418a92b88388efb7fb420a059065f88888ca0745df557a19e7549_sk
        extra_hosts:
            - "peer0.org1.example.com:158.37.63.164"
            - "peer1.org1.example.com:158.37.63.165"
            - "peer0.org2.example.com:158.37.63.175"
            - "peer1.org2.example.com:158.37.63.184"
        ports:
            - "6054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw'
        volumes:
            - ../crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        container_name: ca.org2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}


    zookeeper0:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper0
        environment:
            - ZOO_MY_ID=1
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    zookeeper1:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper1
        environment:
            - ZOO_MY_ID=2
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    zookeeper2:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper2
        environment:
            - ZOO_MY_ID=3
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka0:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka0
        environment:
            - KAFKA_BROKER_ID=0
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_MESSAGE_MAX_BYTES=${KAFKA_MESSAGE_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka1:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka1
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_MESSAGE_MAX_BYTES=${KAFKA_MESSAGE_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka2:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka2
        environment:
            - KAFKA_BROKER_ID=2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_MESSAGE_MAX_BYTES=${KAFKA_MESSAGE_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka3:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka3
        environment:
            - KAFKA_BROKER_ID=3
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
            - KAFKA_MESSAGE_MAX_BYTES=${KAFKA_MESSAGE_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_MAX_BYTES=${KAFKA_REPLICA_FETCH_MAX_BYTES}
            - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=${KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES}
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    orderer0.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer0.example.com
        environment:
            - ORDERER_HOST=orderer0.example.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        extra_hosts:
            - "peer0.org1.example.com:158.37.63.164"
            - "peer1.org1.example.com:158.37.63.165"
            - "peer0.org2.example.com:158.37.63.175"
            - "peer1.org2.example.com:158.37.63.184"
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls:/var/hyperledger/tls
            - ../network-config/:/var/hyperledger/configs
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 7050:7050

    orderer1.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer1.example.com
        environment:
            - ORDERER_HOST=orderer1.example.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
            - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        extra_hosts:
            - "peer0.org1.example.com:158.37.63.164"
            - "peer1.org1.example.com:158.37.63.165"
            - "peer0.org2.example.com:158.37.63.175"
            - "peer1.org2.example.com:158.37.63.184"
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls:/var/hyperledger/tls
            - ../network-config/:/var/hyperledger/configs
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 8050:7050

    orderer2.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer2.example.com
        environment:
            - ORDERER_HOST=orderer2.example.com
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        extra_hosts:
            - "peer0.org1.example.com:158.37.63.164"
            - "peer1.org1.example.com:158.37.63.165"
            - "peer0.org2.example.com:158.37.63.175"
            - "peer1.org2.example.com:158.37.63.184"
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/tls
            - ../network-config/:/var/hyperledger/configs
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 9050:7050
